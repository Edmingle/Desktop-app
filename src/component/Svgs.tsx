interface SVGDictionary {
  [key: string]: (color: string) => JSX.Element;
}
const SVGS: SVGDictionary = {
  calendar: (color: string) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="16"
      height="16"
      viewBox="0 0 16 16"
      fill="none"
    >
      <path
        d="M13.75 2.875H11.125V1.875C11.125 1.80625 11.0688 1.75 11 1.75H10.125C10.0562 1.75 10 1.80625 10 1.875V2.875H6V1.875C6 1.80625 5.94375 1.75 5.875 1.75H5C4.93125 1.75 4.875 1.80625 4.875 1.875V2.875H2.25C1.97344 2.875 1.75 3.09844 1.75 3.375V13.75C1.75 14.0266 1.97344 14.25 2.25 14.25H13.75C14.0266 14.25 14.25 14.0266 14.25 13.75V3.375C14.25 3.09844 14.0266 2.875 13.75 2.875ZM13.125 13.125H2.875V7.1875H13.125V13.125ZM2.875 6.125V4H4.875V4.75C4.875 4.81875 4.93125 4.875 5 4.875H5.875C5.94375 4.875 6 4.81875 6 4.75V4H10V4.75C10 4.81875 10.0562 4.875 10.125 4.875H11C11.0688 4.875 11.125 4.81875 11.125 4.75V4H13.125V6.125H2.875Z"
        fill={color}
      />
    </svg>
  ),
  clock: (color: string) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="17"
      height="18"
      viewBox="0 0 17 18"
      fill="none"
    >
      <path
        d="M8.5 16.4375C12.6076 16.4375 15.9375 13.1076 15.9375 9C15.9375 4.89238 12.6076 1.5625 8.5 1.5625C4.39238 1.5625 1.0625 4.89238 1.0625 9C1.0625 13.1076 4.39238 16.4375 8.5 16.4375Z"
        stroke={color || "#17A76A"}
        strokeWidth="1.0625"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M8.5 4.75V9L10.625 11.125"
        stroke={color || "#17A67A"}
        strokeWidth="1.0625"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  ),
  single_user: (color: string) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="16"
      height="17"
      viewBox="0 0 16 17"
      fill="none"
    >
      <path
        d="M14.4325 13.7497C13.4807 12.1041 12.0138 10.9241 10.3019 10.3647C11.1487 9.86066 11.8066 9.09255 12.1746 8.17837C12.5425 7.26419 12.6002 6.2545 12.3388 5.30435C12.0774 4.35419 11.5113 3.51612 10.7275 2.91883C9.94372 2.32153 8.9855 1.99805 8.00005 1.99805C7.01459 1.99805 6.05638 2.32153 5.27256 2.91883C4.48875 3.51612 3.92267 4.35419 3.66126 5.30435C3.39985 6.2545 3.45756 7.26419 3.82554 8.17837C4.19351 9.09255 4.8514 9.86066 5.69817 10.3647C3.9863 10.9235 2.51942 12.1035 1.56755 13.7497C1.53264 13.8067 1.50949 13.87 1.49945 13.936C1.48942 14.002 1.49271 14.0694 1.50912 14.1341C1.52554 14.1988 1.55476 14.2596 1.59504 14.3128C1.63533 14.3661 1.68587 14.4107 1.74369 14.4441C1.8015 14.4775 1.86542 14.499 1.93168 14.5073C1.99793 14.5156 2.06517 14.5105 2.12944 14.4924C2.1937 14.4743 2.25369 14.4435 2.30585 14.4018C2.35802 14.3601 2.40131 14.3084 2.43317 14.2497C3.61067 12.2147 5.69192 10.9997 8.00005 10.9997C10.3082 10.9997 12.3894 12.2147 13.5669 14.2497C13.5988 14.3084 13.6421 14.3601 13.6942 14.4018C13.7464 14.4435 13.8064 14.4743 13.8707 14.4924C13.9349 14.5105 14.0022 14.5156 14.0684 14.5073C14.1347 14.499 14.1986 14.4775 14.2564 14.4441C14.3142 14.4107 14.3648 14.3661 14.4051 14.3128C14.4453 14.2596 14.4746 14.1988 14.491 14.1341C14.5074 14.0694 14.5107 14.002 14.5006 13.936C14.4906 13.87 14.4675 13.8067 14.4325 13.7497ZM4.50005 6.49975C4.50005 5.80751 4.70532 5.13082 5.0899 4.55525C5.47449 3.97968 6.02111 3.53108 6.66066 3.26617C7.3002 3.00126 8.00393 2.93195 8.68286 3.067C9.3618 3.20205 9.98544 3.53539 10.4749 4.02487C10.9644 4.51436 11.2977 5.138 11.4328 5.81693C11.5678 6.49586 11.4985 7.1996 11.2336 7.83914C10.9687 8.47868 10.5201 9.02531 9.94454 9.40989C9.36897 9.79448 8.69228 9.99975 8.00005 9.99975C7.07209 9.99875 6.18243 9.62969 5.52627 8.97353C4.87011 8.31736 4.50104 7.4277 4.50005 6.49975Z"
        fill={color}
      />
    </svg>
  ),
};
const SVGComponent = ({ src, color }: { src: string; color?: string }) => {
  const svgToRender = SVGS[src];
  if (!svgToRender) {
    return <div></div>;
  }

  return <>{svgToRender(color || "#000000")}</>;
};

export default SVGComponent;
