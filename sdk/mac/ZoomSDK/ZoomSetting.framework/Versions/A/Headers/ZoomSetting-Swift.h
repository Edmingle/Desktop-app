#if 0
#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
#ifndef ZOOMSETTING_SWIFT_H
#define ZOOMSETTING_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AppKit;
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import ZoomKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ZoomSetting",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSCoder;
@class NSString;

SWIFT_CLASS("_TtC11ZoomSetting25ZMDiagnosticBandWidthView")
@interface ZMDiagnosticBandWidthView : ZMBaseView
- (nonnull instancetype)initWithFrame:(NSRect)frameRect OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (NSSize)bandWidthViewSize SWIFT_WARN_UNUSED_RESULT;
- (void)updateInfo:(NSString * _Nonnull)info showBindInfo:(BOOL)showBindInfo;
@end

@protocol ZMDiagnosticBottomActionViewDelegate;

SWIFT_CLASS("_TtC11ZoomSetting28ZMDiagnosticBottomActionView")
@interface ZMDiagnosticBottomActionView : ZMStackView
@property (nonatomic, weak) id <ZMDiagnosticBottomActionViewDelegate> _Nullable delegate;
- (nonnull instancetype)initWithFrame:(NSRect)frameRect OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)setupUI;
@end


SWIFT_PROTOCOL("_TtP11ZoomSetting36ZMDiagnosticBottomActionViewDelegate_")
@protocol ZMDiagnosticBottomActionViewDelegate
@optional
- (void)bottomActionViewSendReport;
- (void)bottomActionViewRunTestMeeting;
@end

@class ZMDiagnosticOverallInfo;
@class ZMDiagnosticInfo;
enum ZMDiagnosticInfoMode : NSInteger;

SWIFT_CLASS("_TtC11ZoomSetting22ZMDiagnosticDataCenter")
@interface ZMDiagnosticDataCenter : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ZMDiagnosticDataCenter * _Nonnull share;)
+ (ZMDiagnosticDataCenter * _Nonnull)share SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) ZMDiagnosticOverallInfo * _Nullable overallInfo;
@property (nonatomic, copy) NSArray<ZMDiagnosticInfo *> * _Nullable zDiagnosticInfoArray;
@property (nonatomic, copy) NSString * _Nullable moreInfoTipsStr;
@property (nonatomic) enum ZMDiagnosticInfoMode currentInfoMode;
@property (nonatomic) enum ZMDiagnosticInfoMode preInfoMode;
@property (nonatomic) NSSize diagnosticBaseViewWSize;
@property (nonatomic) CGFloat overallListViewWidth;
@property (nonatomic) CGFloat overallListViewHeight;
@property (nonatomic) CGFloat overallInfoHeadViewHeight;
@property (nonatomic) BOOL enableDiagnostic;
@property (nonatomic) BOOL showBandWidthView;
@property (nonatomic, copy) NSDictionary<NSAttributedStringKey, NSObject *> * _Nullable grayAttri;
@property (nonatomic, copy) NSDictionary<NSAttributedStringKey, NSObject *> * _Nullable blackAttri;
@property (nonatomic, copy) NSDictionary<NSAttributedStringKey, NSObject *> * _Nullable redAttri;
@property (nonatomic, copy) NSDictionary<NSAttributedStringKey, NSObject *> * _Nullable orangeAttri;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)updateInfoArray:(NSArray<ZMDiagnosticInfo *> * _Nonnull)array mode:(enum ZMDiagnosticInfoMode)mode;
- (void)resetInfoModeWithNeedRefresh:(BOOL)needRefresh;
- (float)dynamicOverallListHeight SWIFT_WARN_UNUSED_RESULT;
@end

@class NSAttributedString;

SWIFT_CLASS("_TtC11ZoomSetting16ZMDiagnosticInfo")
@interface ZMDiagnosticInfo : NSObject
@property (nonatomic) BOOL needUpdate;
@property (nonatomic, strong) NSAttributedString * _Nullable title;
@property (nonatomic, strong) NSAttributedString * _Nullable sendInfo;
@property (nonatomic, strong) NSAttributedString * _Nullable receiveInfo;
@property (nonatomic) BOOL isHeader;
@property (nonatomic) BOOL isDynamicHeight;
@property (nonatomic) CGFloat dynamicHeight;
@property (nonatomic) BOOL showWiFiStats;
@property (nonatomic, copy) NSString * _Nullable moreInfoTipsStr;
- (void)setTitleLabel:(NSString * _Nullable)title;
- (void)setSendInfoLabel:(NSString * _Nullable)sendInfo;
- (void)updateInfoHeight;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11ZoomSetting24ZMDiagnosticInfoListView")
@interface ZMDiagnosticInfoListView : NSView <NSTableViewDataSource, NSTableViewDelegate>
- (nonnull instancetype)initWithFrame:(NSRect)frameRect OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


@interface ZMDiagnosticInfoListView (SWIFT_EXTENSION(ZoomSetting))
- (void)updateInfo;
@end

@class NSTableView;
@class NSTableColumn;

@interface ZMDiagnosticInfoListView (SWIFT_EXTENSION(ZoomSetting))
- (NSInteger)numberOfRowsInTableView:(NSTableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(NSTableView * _Nonnull)tableView heightOfRow:(NSInteger)row SWIFT_WARN_UNUSED_RESULT;
- (BOOL)tableView:(NSTableView * _Nonnull)tableView shouldSelectTableColumn:(NSTableColumn * _Nullable)tableColumn SWIFT_WARN_UNUSED_RESULT;
- (NSView * _Nullable)tableView:(NSTableView * _Nonnull)tableView viewForTableColumn:(NSTableColumn * _Nullable)tableColumn row:(NSInteger)row SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, ZMDiagnosticInfoMode, open) {
  ZMDiagnosticInfoModeInfoModeOverall = 0,
  ZMDiagnosticInfoModeInfoModeAudio = 1,
  ZMDiagnosticInfoModeInfoModeVideo = 2,
  ZMDiagnosticInfoModeInfoModeScreenShare = 3,
  ZMDiagnosticInfoModeInfoModePhone = 4,
  ZMDiagnosticInfoModeInfoModeNull = 5,
};


SWIFT_CLASS("_TtC11ZoomSetting23ZMDiagnosticOverallInfo")
@interface ZMDiagnosticOverallInfo : NSObject
@property (nonatomic) NSInteger cpuCoreNumber;
@property (nonatomic) float cpuFrequency;
@property (nonatomic) float cpuZoomUsage;
@property (nonatomic) float cpuOverallUsage;
@property (nonatomic) NSInteger memorySize;
@property (nonatomic) NSInteger memoryZoomUsage;
@property (nonatomic) NSInteger memoryOverallUsage;
@property (nonatomic) NSInteger bandwidthSend;
@property (nonatomic) NSInteger bandwidthReceive;
@property (nonatomic, copy) NSString * _Nullable networkType;
@property (nonatomic, copy) NSString * _Nullable proxy;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11ZoomSetting22ZMDiagnosticProcessBar")
@interface ZMDiagnosticProcessBar : NSView
- (nonnull instancetype)initWithFrame:(NSRect)frameRect SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)drawRect:(NSRect)dirtyRect;
+ (BOOL)accessibilityIsIgnored SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)accessibilityLabel SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)accessibilityRoleDescription SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC11ZoomSetting26ZMDiagnosticoMediaInfoView")
@interface ZMDiagnosticoMediaInfoView : NSView
- (nonnull instancetype)initWithFrame:(NSRect)frameRect OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)updateInfo;
@end


SWIFT_CLASS("_TtC11ZoomSetting28ZMDiagnosticoOverallInfoView")
@interface ZMDiagnosticoOverallInfoView : NSView
- (nonnull instancetype)initWithFrame:(NSRect)frameRect OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)setupUI;
@end



@class NSColor;

@interface ZMDiagnosticoOverallInfoView (SWIFT_EXTENSION(ZoomSetting))
- (CGFloat)overallInfoViewWidth SWIFT_WARN_UNUSED_RESULT;
- (void)updateOverallCPUInfoWithTextBlackColor:(NSColor * _Nonnull)textBlackColor textGrayColor:(NSColor * _Nonnull)textGrayColor;
- (void)updateOverallMemoryInfoWithTextBlackColor:(NSColor * _Nonnull)textBlackColor textGrayColor:(NSColor * _Nonnull)textGrayColor;
- (void)updateInfo;
- (void)updateBandWidtInfo:(NSString * _Nonnull)info showBindInfo:(BOOL)showBindInfo;
@end

typedef SWIFT_ENUM(NSInteger, ZMEncryptIdentityType, open) {
  ZMEncryptIdentityTypeEmail = 0,
  ZMEncryptIdentityTypePhoneNum = 1,
  ZMEncryptIdentityTypeExtensionNum = 2,
  ZMEncryptIdentityTypeAccountDomain = 3,
  ZMEncryptIdentityTypeAccountId = 4,
  ZMEncryptIdentityTypeFingerPrint = 5,
};

typedef SWIFT_ENUM(NSInteger, ZMEncryptInfoType, open) {
  ZMEncryptInfoTypeGroup_Device = 0,
  ZMEncryptInfoTypeGroup_Devices = 1,
  ZMEncryptInfoTypeGroup_NewDevice = 2,
  ZMEncryptInfoTypeGroup_OtherDevices = 3,
  ZMEncryptInfoTypeGroup_Account = 4,
  ZMEncryptInfoTypeGroup_History = 5,
  ZMEncryptInfoTypeGroup_Key = 6,
  ZMEncryptInfoTypeGroup_Keys = 7,
  ZMEncryptInfoTypeGroup_AccountChange = 8,
  ZMEncryptInfoTypeGroup_ReviewActivity = 9,
};


SWIFT_CLASS("_TtC11ZoomSetting18ZMEncryptStoreData")
@interface ZMEncryptStoreData : NSObject
@property (nonatomic) NSInteger seqno;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable deviceIds;
@property (nonatomic) BOOL isInSetting;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, ZMEncryptUnReviewedType, open) {
  ZMEncryptUnReviewedTypeNone = 0,
  ZMEncryptUnReviewedTypeKeyOnly = 1,
  ZMEncryptUnReviewedTypeDeviceOnly = 2,
  ZMEncryptUnReviewedTypeIdentityOnly = 3,
  ZMEncryptUnReviewedTypeKeyAndDevice = 4,
  ZMEncryptUnReviewedTypeIdentityAndOther = 5,
};

@class ZMPigment;

SWIFT_CLASS("_TtC11ZoomSetting19ZMMTNavigationTheme")
@interface ZMMTNavigationTheme : NSObject
@property (nonatomic, strong) ZMPigment * _Nullable bar;
@property (nonatomic, strong) ZMPigment * _Nullable normalItem;
@property (nonatomic, strong) ZMPigment * _Nullable hoverItem;
@property (nonatomic, strong) ZMPigment * _Nullable selectedItem;
- (void)setTheme:(ZMMTNavigationTheme * _Nonnull)theme;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSImage;

SWIFT_CLASS("_TtC11ZoomSetting25ZMSAccountDeviceViewModel")
@interface ZMSAccountDeviceViewModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull deviceID;
@property (nonatomic, copy) NSString * _Nonnull resouce;
@property (nonatomic, copy) NSString * _Nonnull deviceName;
@property (nonatomic, strong) NSImage * _Nonnull icon;
@property (nonatomic, copy) NSString * _Nonnull descriptionStr;
@property (nonatomic, strong) NSImage * _Nonnull presenceImage;
@property (nonatomic, copy) NSString * _Nonnull status;
@property (nonatomic, copy) NSString * _Nonnull buttonHelpString;
@property (nonatomic) BOOL actionEnabled;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol ZMSDeviceManagementDelegate;
@class PZMButton;
@class NSButton;
@class ZMSWhereSignViewModel;

SWIFT_CLASS("_TtC11ZoomSetting27ZMSAccountWhereSignListView")
@interface ZMSAccountWhereSignListView : ZMBaseView <NSTableViewDataSource, NSTableViewDelegate>
@property (nonatomic, weak) id <ZMSDeviceManagementDelegate> _Nullable delegate;
@property (nonatomic, strong) PZMButton * _Nonnull signOutAllButton;
@property (nonatomic, strong) NSButton * _Nullable refreshButton;
- (nonnull instancetype)initWithFrame:(NSRect)frameRect OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)updateSignDeviceInfoWithInfos:(NSArray<ZMSWhereSignViewModel *> * _Nonnull)infos;
- (ZMSWhereSignViewModel * _Nonnull)currentDeviceInfoWithRow:(NSInteger)row SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)numberOfRowsInTableView:(NSTableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(NSTableView * _Nonnull)tableView heightOfRow:(NSInteger)row SWIFT_WARN_UNUSED_RESULT;
- (BOOL)tableView:(NSTableView * _Nonnull)tableView shouldSelectTableColumn:(NSTableColumn * _Nullable)tableColumn SWIFT_WARN_UNUSED_RESULT;
- (BOOL)selectionShouldChangeInTableView:(NSTableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSView * _Nullable)tableView:(NSTableView * _Nonnull)tableView viewForTableColumn:(NSTableColumn * _Nullable)tableColumn row:(NSInteger)row SWIFT_WARN_UNUSED_RESULT;
- (void)refreshEncryptButton:(BOOL)show;
@end


SWIFT_PROTOCOL("_TtP11ZoomSetting27ZMSDeviceManagementDelegate_")
@protocol ZMSDeviceManagementDelegate <NSObject>
- (void)deviceManagementSignOutClickWithRow:(NSInteger)row isSignOut:(BOOL)isSignOut;
- (void)deviceManagementRefreshClick;
- (void)deviceManagementSignOutAllSession;
- (void)deviceManagementEncryptButtonClick;
@end


SWIFT_CLASS("_TtC11ZoomSetting8ZMSLabel")
@interface ZMSLabel : ZMLabel
- (nonnull instancetype)initWithFrame:(NSRect)frameRect OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC11ZoomSetting20ZMSWhereSignCellView")
@interface ZMSWhereSignCellView : NSTableCellView
- (nonnull instancetype)initWithFrame:(NSRect)frameRect OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC11ZoomSetting21ZMSWhereSignViewModel")
@interface ZMSWhereSignViewModel : NSObject
@property (nonatomic, readonly, strong) NSImage * _Nonnull image;
@property (nonatomic, copy) NSString * _Nonnull deviceIdentifier;
@property (nonatomic, copy) NSString * _Nonnull deviceType;
@property (nonatomic, copy) NSString * _Nonnull deviceName;
@property (nonatomic, copy) NSString * _Nonnull deviceHardware;
@property (nonatomic, copy) NSString * _Nonnull os;
@property (nonatomic, copy) NSString * _Nonnull location;
@property (nonatomic, copy) NSString * _Nonnull lastLoginTime;
@property (nonatomic) BOOL currentSession;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11ZoomSetting27ZMSettingStatisticPhoneInfo")
@interface ZMSettingStatisticPhoneInfo : NSObject
@property (nonatomic, copy) NSString * _Nullable registerServerIPPortString;
@property (nonatomic, copy) NSString * _Nullable registerIDString;
@property (nonatomic, copy) NSString * _Nullable localNetworkInterfaceString;
@property (nonatomic, copy) NSString * _Nullable peerNumberString;
@property (nonatomic, copy) NSString * _Nullable localIPPortString;
@property (nonatomic, copy) NSString * _Nullable remoteIPPortString;
@property (nonatomic, copy) NSString * _Nullable packetSendString;
@property (nonatomic, copy) NSString * _Nullable packetReceiveString;
@property (nonatomic, copy) NSString * _Nullable frequencySendString;
@property (nonatomic, copy) NSString * _Nullable frequencyReceiveString;
@property (nonatomic, copy) NSString * _Nullable packetLossSendString;
@property (nonatomic, copy) NSString * _Nullable packetLossReceiveString;
@property (nonatomic, copy) NSString * _Nullable packetLossAverageMaxSendString;
@property (nonatomic, copy) NSString * _Nullable packetLossAverageMaxReceiveString;
@property (nonatomic, copy) NSString * _Nullable jitterSendString;
@property (nonatomic, copy) NSString * _Nullable jitterReceiveString;
@property (nonatomic, copy) NSString * _Nullable bandwidthSendString;
@property (nonatomic, copy) NSString * _Nullable bandwidthReceiveString;
@property (nonatomic, copy) NSString * _Nullable networkDelayString;
@property (nonatomic, copy) NSString * _Nullable codecUsedSendString;
@property (nonatomic, copy) NSString * _Nullable codecUsedReceiveString;
@property (nonatomic, copy) NSString * _Nullable switchInfoString;
@property (nonatomic, copy) NSString * _Nullable survivabilityStatus;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable registerServerIPs;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11ZoomSetting23ZMSettingStatisticsTool")
@interface ZMSettingStatisticsTool : NSObject
+ (NSString * _Nonnull)bandwidthWidthInfoWithBandwidthSend:(NSInteger)bandwidthSend bandwidthReceive:(NSInteger)bandwidthReceive SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getNetWorkStringByType:(NSInteger)type SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11ZoomSetting26ZMSettingWindowContentView")
@interface ZMSettingWindowContentView : NSView
- (void)drawRect:(NSRect)dirtyRect;
@property (nonatomic, readonly, getter=isFlipped) BOOL flipped;
- (nonnull instancetype)initWithFrame:(NSRect)frameRect OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
